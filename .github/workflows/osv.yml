# .github/workflows/osv.yml
name: OSV Scanner (SCA)
on:
  push: { branches: [ master, main ] }
  pull_request:

jobs:
  osv-scanner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      # Safely create a lockfile (no scripts executed)
      - name: Generate package-lock.json
        run: npm install --package-lock-only --ignore-scripts

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install OSV-Scanner
        run: |
          curl -sSfL https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64 -o osv-scanner
          chmod +x osv-scanner && sudo mv osv-scanner /usr/local/bin/

      # Scan the lockfile; keep raw + clean JSON for evidence and readability
      - name: Run OSV-Scanner → JSON
        run: |
          osv-scanner --lockfile=package-lock.json --format json > osv-results.json || true
          jq 'del(.results[]?.packages[]?.package_path)' osv-results.json > osv-results-clean.json

      - name: Upload OSV results
        uses: actions/upload-artifact@v4
        with:
          name: osv-results
          path: |
            osv-results.json
            osv-results-clean.json

      # Add a human-readable summary to the run page (no downloads needed)
      - name: Add CVE list to job summary
        run: |
          echo "### OSV Scanner — CVE Summary" >> $GITHUB_STEP_SUMMARY
          jq -r '.results[]?.packages[]? as $p
                 | $p.package.name as $pkg
                 | $p.vulnerabilities[]?
                 | "- \($pkg) : \(.id) | fixed: \(.fixedVersion // \"n/a\") | severity: \((.severity[0].score // .database_specific.severity // \"n/a\"))"' \
            osv-results-clean.json | sort -u >> $GITHUB_STEP_SUMMARY \
            || echo "No CVEs found" >> $GITHUB_STEP_SUMMARY
