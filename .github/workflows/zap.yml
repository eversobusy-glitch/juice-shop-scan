name: OSV Scanner (SCA) 
on: 
push: 
branches: [ master, main ] 
pull_request: 

jobs: 
osv-scanner: 
runs-on: ubuntu-latest 
steps: - 
uses: actions/checkout@v4 

 - name: Verify package.json at root 
    run: | 
      test -f package.json && echo "Found package.json ✅" || (echo "package.json NOT at root ❌"; exit 1) 
 
  - name: Setup Node (LTS) 
    uses: actions/setup-node@v4 
    with: 
      node-version: 18 
      
 
  # Create a lockfile without building or running scripts (safe & fast) 
  - name: Generate package-lock.json (no install) 
    run: npm install --package-lock-only --ignore-scripts 
 
  - name: Install jq 
    run: sudo apt-get update && sudo apt-get install -y jq 
 
  - name: Install OSV-Scanner 
    run: | 
      curl -sSfL https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64 -o osv-scanner 
      chmod +x osv-scanner 
      sudo mv osv-scanner /usr/local/bin/ 
      osv-scanner --version 
 
  # Scan both the lockfile (best results) and the repo as fallback 
  - name: Run OSV-Scanner (lockfile only) and save results 
    run: | 
      # Scan the generated lockfile for real CVEs (best signal) 
      osv-scanner --lockfile=package-lock.json --format json > osv-results.json || true 
 
      # Make a cleaner copy for screenshots/summaries 
      if [ -s osv-results.json ]; then 
        jq 'del(.results[]?.packages[]?.package_path)' osv-results.json > osv-results-clean.json 
      else 
        echo '{}' > osv-results-clean.json 
      fi 
 
 
  - name: Upload OSV results (artifact) 
    uses: actions/upload-artifact@v4 
    with: 
      name: osv-results 
      path: | 
        osv-results.json 
        osv-results-clean.json 
        package-lock.json 
 
  # 👇 This is the Step 5 "quality-of-life" summary 
  - name: Add CVE list to job summary 
    run: | 
      echo "### OSV Scanner — CVE Summary" >> $GITHUB_STEP_SUMMARY 
      jq -r ' 
        .results[]?.packages[]? as $p 
        | $p.package.name as $pkg 
        | $p.vulnerabilities[]? 
        | "- \($pkg) : \(.id) | fixed: \(.fixedVersion // \"n/a\") | severity: \((.severity[0].score // .database_specific.severity // \"n/a\"))" 
      ' osv-results-clean.json | sort -u >> $GITHUB_STEP_SUMMARY || echo "No CVEs found" >> $GITHUB_STEP_SUMMARY 
 
